# This file is a template, and might need editing before it works on your project.
# Official docker image.
image: docker:latest

variables:
  CI_REGISTRY: https://docker.nasreddinebacali.info
  CI_DOCKER_REPOSITORY: docker.nasreddinebacali.info

services:
  - docker:dind

stages:
  - build
  - deploy

before_script:
  - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  - apk update
  - apk add bash
  - 'which ssh-agent || apk add openssh'
  - eval $(ssh-agent -s)
  - bash -c "ssh-add <(echo '$SSH_PRIVATE_KEY')"
  - mkdir -p ~/.ssh
  - ssh-keyscan -H '$VPS_IP' >> ~/.ssh/known_hosts
  - ssh-keyscan $VPS_IP | sort -u - ~/.ssh/known_hosts -o ~/.ssh/known_hosts


#build-backend:
#  stage: build
#  script:
#    - cd backend
#    - docker build -t "$CI_DOCKER_REPOSITORY/personal-website-backend:latest" .
#    - docker push "$CI_DOCKER_REPOSITORY/personal-website-backend:latest"
#  only:
#    - master
#
#build-frontend:
#  stage: build
#  script:
#    - cd frontend
#    - docker build -t "$CI_DOCKER_REPOSITORY/personal-website-frontend:latest" .
#    - docker push "$CI_DOCKER_REPOSITORY/personal-website-frontend:latest"
#  only:
#    - master

deploy-acc:
  stage: deploy
  environment:
    name: Acceptance
    url: https://acc.nasreddinebacali.info
  script:
    - |
      ssh root@$VPS_IP /bin/bash -s << EOT
        cd personal-website
        echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
        docker-compose -f docker-compose.acc.yml -p acc_personal_website down
        docker-compose -f docker-compose.acc.yml pull
        docker-compose -f docker-compose.acc.yml -p acc_personal_website up -d
      EOT
  only:
    - master

deploy-prod:
  stage: deploy
  environment:
    name: Production
    url: https://www.nasreddinebacali.info
  script:
    - |
      ssh root@$VPS_IP /bin/bash -s << EOT
        cd personal-website
        echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
        docker-compose -f docker-compose.prod.yml -p prod_personal_website down
        docker-compose -f docker-compose.prod.yml pull
        docker-compose -f docker-compose.prod.yml -p prod_personal_website up -d
      EOT
  when: manual
  only:
    - master
